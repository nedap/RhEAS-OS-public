diff -urN a/board/nedap/nedap9263/config.mk b/board/nedap/nedap9263/config.mk
--- a/board/nedap/nedap9263/config.mk	1970-01-01 01:00:00.000000000 +0100
+++ b/board/nedap/nedap9263/config.mk	2010-12-02 15:07:11.346478536 +0100
@@ -0,0 +1 @@
+TEXT_BASE = 0x23f00000
diff -urN a/board/nedap/nedap9263/Makefile b/board/nedap/nedap9263/Makefile
--- a/board/nedap/nedap9263/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ b/board/nedap/nedap9263/Makefile	2010-12-02 15:07:11.346478536 +0100
@@ -0,0 +1,54 @@
+#
+# (C) Copyright 2003-2008
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# (C) Copyright 2008
+# Stelian Pop <stelian.pop@leadtechdesign.com>
+# Lead Tech Design <www.leadtechdesign.com>
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+COBJS-y += nedap9263.o
+
+SRCS	:= $(SOBJS-y:.o=.S) $(COBJS-y:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS-y))
+SOBJS	:= $(addprefix $(obj),$(SOBJS-y))
+
+$(LIB):	$(obj).depend $(OBJS) $(SOBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+clean:
+	rm -f $(SOBJS) $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak $(obj).depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -urN a/board/nedap/nedap9263/nedap9263.c b/board/nedap/nedap9263/nedap9263.c
--- a/board/nedap/nedap9263/nedap9263.c	1970-01-01 01:00:00.000000000 +0100
+++ b/board/nedap/nedap9263/nedap9263.c	2010-12-02 15:08:09.151235429 +0100
@@ -0,0 +1,384 @@
+/*
+ * (C) Copyright 2007-2008
+ * Stelian Pop <stelian.pop@leadtechdesign.com>
+ * Lead Tech Design <www.leadtechdesign.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/sizes.h>
+#include <asm/arch/at91sam9263.h>
+#include <asm/arch/at91sam9_smc.h>
+#include <asm/arch/at91_common.h>
+#include <asm/arch/at91_pmc.h>
+#include <asm/arch/at91_rstc.h>
+#include <asm/arch/at91_matrix.h>
+#include <asm/arch/at91_pio.h>
+#include <asm/arch/clk.h>
+#include <asm/arch/io.h>
+#include <asm/arch/hardware.h>
+#ifdef CONFIG_LCD
+#include <lcd.h>
+#include <atmel_lcdc.h>
+#endif
+#if defined(CONFIG_RESET_PHY_R) && defined(CONFIG_MACB)
+#include <net.h>
+#endif
+#include <netdev.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+/* ------------------------------------------------------------------------- */
+/*
+ * Miscelaneous platform dependent initialisations
+ */
+
+#ifdef CONFIG_CMD_NAND
+static void nedap9263_nand_hw_init(void)
+{
+	unsigned long csa;
+	at91_smc_t 	*smc 	= (at91_smc_t *) AT91_SMC0_BASE;
+	at91_matrix_t 	*matrix = (at91_matrix_t *) AT91_MATRIX_BASE;
+	at91_pmc_t	*pmc	= (at91_pmc_t *) AT91_PMC_BASE;
+
+	/* Enable CS3 */
+	csa = readl(&matrix->csa[0]) | AT91_MATRIX_CSA_EBI_CS3A;
+	writel(csa, &matrix->csa[0]);
+
+	/* Configure SMC CS3 for NAND/SmartMedia */
+	writel(AT91_SMC_SETUP_NWE(1) | AT91_SMC_SETUP_NCS_WR(1) |
+		AT91_SMC_SETUP_NRD(1) | AT91_SMC_SETUP_NCS_RD(1),
+		&smc->cs[3].setup);
+
+	writel(AT91_SMC_PULSE_NWE(3) | AT91_SMC_PULSE_NCS_WR(3) |
+		AT91_SMC_PULSE_NRD(3) | AT91_SMC_PULSE_NCS_RD(3),
+		&smc->cs[3].pulse);
+
+	writel(AT91_SMC_CYCLE_NWE(5) | AT91_SMC_CYCLE_NRD(5),
+		&smc->cs[3].cycle);
+	writel(AT91_SMC_MODE_RM_NRD | AT91_SMC_MODE_WM_NWE |
+		AT91_SMC_MODE_EXNW_DISABLE |
+#ifdef CONFIG_SYS_NAND_DBW_16
+		       AT91_SMC_MODE_DBW_16 |
+#else /* CONFIG_SYS_NAND_DBW_8 */
+		       AT91_SMC_MODE_DBW_8 |
+#endif
+		       AT91_SMC_MODE_TDF_CYCLE(2),
+		&smc->cs[3].mode);
+
+	writel(1 << AT91SAM9263_ID_PIOA | 1 << AT91SAM9263_ID_PIOCDE,
+		&pmc->pcer);
+
+	/* Configure RDY/BSY */
+	at91_set_pio_input(CONFIG_SYS_NAND_READY_PIN, 1);
+
+	/* Enable NandFlash */
+	at91_set_pio_output(CONFIG_SYS_NAND_ENABLE_PIN, 1);
+}
+#endif
+
+#ifdef CONFIG_MACB
+static void nedap9263_macb_hw_init(void)
+{
+	at91_pmc_t	*pmc	= (at91_pmc_t *) AT91_PMC_BASE;
+
+#ifndef CONFIG_MACB2MAC
+	unsigned long 	erstl;
+	at91_rstc_t	*rstc	= (at91_rstc_t *) AT91_RSTC_BASE;
+#endif
+
+	/* Enable clock */
+	writel(1 << AT91SAM9263_ID_EMAC, &pmc->pcer);
+
+#ifndef CONFIG_MACB2MAC
+	/*
+	 * Disable pull-up on:
+	 *	RXDV (PC25) => PHY normal mode (not Test mode)
+	 *	ERX0 (PE25) => PHY ADDR0
+	 *	ERX1 (PE26) => PHY ADDR1 => PHYADDR = 0x0
+	 *
+	 * PHY has internal pull-down
+	 */
+
+	at91_set_pio_pullup(AT91_PIO_PORTC, 25, 0);
+	at91_set_pio_pullup(AT91_PIO_PORTE, 25, 0);
+	at91_set_pio_pullup(AT91_PIO_PORTE, 26, 0);
+
+	erstl = readl(&rstc->mr) & AT91_RSTC_MR_ERSTL_MASK;
+
+	/* Need to reset PHY -> 500ms reset */
+	writel(AT91_RSTC_KEY | AT91_RSTC_MR_ERSTL(0x0D) |
+		AT91_RSTC_MR_URSTEN, &rstc->mr);
+
+	writel(AT91_RSTC_KEY | AT91_RSTC_CR_EXTRST, &rstc->cr);
+	/* Wait for end hardware reset */
+	while (!(readl(&rstc->sr) & AT91_RSTC_SR_NRSTL))
+		;
+
+	/* Restore NRST value */
+	writel(AT91_RSTC_KEY | erstl | AT91_RSTC_MR_URSTEN, &rstc->mr);
+
+	/* Re-enable pull-up */
+	at91_set_pio_pullup(AT91_PIO_PORTC, 25, 1);
+	at91_set_pio_pullup(AT91_PIO_PORTE, 25, 1);
+	at91_set_pio_pullup(AT91_PIO_PORTE, 26, 1);
+#endif
+
+	at91_macb_hw_init();
+}
+#endif
+
+#ifdef CONFIG_LCD
+vidinfo_t panel_info = {
+	vl_col:		240,
+	vl_row:		320,
+	vl_clk:		4965000,
+	vl_sync:	ATMEL_LCDC_INVLINE_INVERTED |
+			ATMEL_LCDC_INVFRAME_INVERTED,
+	vl_bpix:	3,
+	vl_tft:		1,
+	vl_hsync_len:	5,
+	vl_left_margin:	1,
+	vl_right_margin:33,
+	vl_vsync_len:	1,
+	vl_upper_margin:1,
+	vl_lower_margin:0,
+	mmio:		AT91SAM9263_LCDC_BASE,
+};
+
+void lcd_enable(void)
+{
+	at91_set_pio_value(AT91_PIO_PORTA, 30, 1);  /* power up */
+}
+
+void lcd_disable(void)
+{
+	at91_set_pio_value(AT91_PIO_PORTA, 30, 0);  /* power down */
+}
+
+#ifdef CONFIG_LCD_IN_PSRAM
+
+#define PSRAM_CTRL_REG	(PHYS_PSRAM + PHYS_PSRAM_SIZE - 2)
+/* Initialize the PSRAM memory */
+static int nedap9263_lcd_hw_psram_init(void)
+{
+	unsigned long csa;
+	at91_smc_t 	*smc 	= (at91_smc_t *) AT91_SMC1_BASE;
+	at91_matrix_t 	*matrix = (at91_matrix_t *) AT91_MATRIX_BASE;
+
+	/* Enable CS3  3.3v, no pull-ups */
+	csa = readl(&matrix->csa[1]) | AT91_MATRIX_CSA_DBPUC |
+		AT91_MATRIX_CSA_VDDIOMSEL_3_3V;
+
+	writel(csa, &matrix->csa[1]);
+
+	/* Configure SMC1 CS0 for PSRAM - 16-bit */
+	writel(AT91_SMC_SETUP_NWE(0) | AT91_SMC_SETUP_NCS_WR(0) |
+		AT91_SMC_SETUP_NRD(0) | AT91_SMC_SETUP_NCS_RD(0),
+		&smc->cs[0].setup);
+
+	writel(AT91_SMC_PULSE_NWE(5) | AT91_SMC_PULSE_NCS_WR(6) |
+		AT91_SMC_PULSE_NRD(3) | AT91_SMC_PULSE_NCS_RD(6),
+		&smc->cs[0].pulse);
+
+	writel(AT91_SMC_CYCLE_NWE(6) | AT91_SMC_CYCLE_NRD(6),
+		&smc->cs[0].cycle);
+		       
+	/* test PSRAM */
+	writew(0x1234, PHYS_PSRAM);
+	writew(0x5678, PHYS_PSRAM + 2);
+	if ((readw(PHYS_PSRAM) != 0x1234)
+	   || (readw(PHYS_PSRAM + 2) != 0x5678))
+		return 1;
+
+	/* Bus matrix */
+	writel(AT91_MATRIX_PRA_M5(3), &matrix->pr[5].a);
+	writel(AT91_MATRIX_SCFG_ARBT_FIXED_PRIORITY |
+		AT91_MATRIX_SCFG_FIXED_DEFMSTR(5) |
+		AT91_MATRIX_SCFG_DEFMSTR_TYPE_FIXED |
+		AT91_MATRIX_SCFG_SLOT_CYCLE(255), 
+		&matrix->scfg[5]);
+
+	return 0;
+}
+#endif
+
+static void nedap9263_lcd_hw_init(void)
+{
+	at91_pmc_t	*pmc	= (at91_pmc_t *) AT91_PMC_BASE;
+
+	at91_set_a_periph(AT91_PIO_PORTC, 0, 0);	/* LCDVSYNC */
+	at91_set_a_periph(AT91_PIO_PORTC, 1, 0);	/* LCDHSYNC */
+	at91_set_a_periph(AT91_PIO_PORTC, 2, 0);	/* LCDDOTCK */
+	at91_set_a_periph(AT91_PIO_PORTC, 3, 0);	/* LCDDEN */
+	at91_set_b_periph(AT91_PIO_PORTB, 9, 0);	/* LCDCC */
+	at91_set_a_periph(AT91_PIO_PORTC, 6, 0);	/* LCDD2 */
+	at91_set_a_periph(AT91_PIO_PORTC, 7, 0);	/* LCDD3 */
+	at91_set_a_periph(AT91_PIO_PORTC, 8, 0);	/* LCDD4 */
+	at91_set_a_periph(AT91_PIO_PORTC, 9, 0);	/* LCDD5 */
+	at91_set_a_periph(AT91_PIO_PORTC, 10, 0);	/* LCDD6 */
+	at91_set_a_periph(AT91_PIO_PORTC, 11, 0);	/* LCDD7 */
+	at91_set_a_periph(AT91_PIO_PORTC, 14, 0);	/* LCDD10 */
+	at91_set_a_periph(AT91_PIO_PORTC, 15, 0);	/* LCDD11 */
+	at91_set_a_periph(AT91_PIO_PORTC, 16, 0);	/* LCDD12 */
+	at91_set_b_periph(AT91_PIO_PORTC, 12, 0);	/* LCDD13 */
+	at91_set_a_periph(AT91_PIO_PORTC, 18, 0);	/* LCDD14 */
+	at91_set_a_periph(AT91_PIO_PORTC, 19, 0);	/* LCDD15 */
+	at91_set_a_periph(AT91_PIO_PORTC, 22, 0);	/* LCDD18 */
+	at91_set_a_periph(AT91_PIO_PORTC, 23, 0);	/* LCDD19 */
+	at91_set_a_periph(AT91_PIO_PORTC, 24, 0);	/* LCDD20 */
+	at91_set_b_periph(AT91_PIO_PORTC, 17, 0);	/* LCDD21 */
+	at91_set_a_periph(AT91_PIO_PORTC, 26, 0);	/* LCDD22 */
+	at91_set_a_periph(AT91_PIO_PORTC, 27, 0);	/* LCDD23 */
+
+	writel(1 << AT91SAM9263_ID_LCDC, &pmc->pcer);
+
+#ifdef CONFIG_LCD_IN_PSRAM
+	/* initialize te PSRAM */
+	int stat = nedap9263_lcd_hw_psram_init();
+
+	gd->fb_base = (stat == 0) ? PHYS_PSRAM : AT91SAM9263_SRAM0_BASE;
+#else
+	gd->fb_base = AT91SAM9263_SRAM0_BASE;
+#endif
+}
+
+#ifdef CONFIG_LCD_INFO
+#include <nand.h>
+#include <version.h>
+
+void lcd_show_board_info(void)
+{
+	ulong dram_size, nand_size;
+	int i;
+	char temp[32];
+
+	lcd_printf ("%s\n", U_BOOT_VERSION);
+	lcd_printf ("(C) 2008 ATMEL Corp\n");
+	lcd_printf ("at91support@atmel.com\n");
+	lcd_printf ("%s CPU at %s MHz\n",
+		CONFIG_SYS_AT91_CPU_NAME,
+		strmhz(temp, get_cpu_clk_rate()));
+
+	dram_size = 0;
+	for (i = 0; i < CONFIG_NR_DRAM_BANKS; i++)
+		dram_size += gd->bd->bi_dram[i].size;
+	nand_size = 0;
+	for (i = 0; i < CONFIG_SYS_MAX_NAND_DEVICE; i++)
+		nand_size += nand_info[i].size;
+	lcd_printf ("  %ld MB SDRAM, %ld MB NAND",
+		dram_size >> 20,
+		nand_size >> 20 );
+#ifdef CONFIG_LCD_IN_PSRAM
+	if (gd->fb_base == PHYS_PSRAM) 
+		lcd_printf (",\n  4 MB PSRAM");
+#endif
+	lcd_puts ("\n");
+}
+#endif /* CONFIG_LCD_INFO */
+#endif
+
+int board_init(void)
+{
+	at91_pmc_t	*pmc	= (at91_pmc_t *) AT91_PMC_BASE;
+
+	/* Enable Ctrlc */
+	console_init_f();
+
+	writel((1 << AT91SAM9263_ID_PIOA) |
+		(1 << AT91SAM9263_ID_PIOCDE) |
+		(1 << AT91SAM9263_ID_PIOB),
+		&pmc->pcer);
+
+	/* arch number of NEDAP9263-Board */
+	gd->bd->bi_arch_number = MACH_TYPE_NEDAP9263;
+	/* adress of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
+
+	at91_serial_hw_init();
+#ifdef CONFIG_CMD_NAND
+	nedap9263_nand_hw_init();
+#endif
+#ifdef CONFIG_HAS_DATAFLASH
+	at91_set_pio_output(AT91_PIO_PORTE, 20, 1);	/* select spi0 clock */
+	at91_spi0_hw_init(1 << 0);
+#endif
+#ifdef CONFIG_MACB
+	nedap9263_macb_hw_init();
+#endif
+#ifdef CONFIG_USB_OHCI_NEW
+	at91_uhp_hw_init();
+#endif
+#ifdef CONFIG_LCD
+	nedap9263_lcd_hw_init();
+#endif
+	return 0;
+}
+
+int dram_init(void)
+{
+	gd->bd->bi_dram[0].start = PHYS_SDRAM;
+	gd->bd->bi_dram[0].size = get_ram_size((long *) PHYS_SDRAM, 0x10000000);
+	return 0;
+}
+
+#ifdef CONFIG_RESET_PHY_R
+void reset_phy(void)
+{
+}
+#endif
+
+int board_eth_init(bd_t *bis)
+{
+	int rc = 0;
+#ifdef CONFIG_MACB
+	rc = macb_eth_initialize(0, (void *)AT91_EMAC_BASE, 0x00);
+#endif
+	return rc;
+}
+
+#ifdef CONFIG_DISPLAY_BOARDINFO
+int checkboard (void)
+{
+	char *ss;
+
+	printf("Board            : Nedap 9263\n");
+
+#ifdef CONFIG_LCD
+	switch (gd->fb_base) {
+	case PHYS_PSRAM:
+		ss = "PSRAM";
+		break;
+
+	case AT91SAM9263_SRAM0_BASE:
+		ss = "Internal SRAM";
+		break;
+
+	default:
+		ss = "";
+		break;
+	}
+	printf("Video memory     : 0x%08lX (%s)\n", gd->fb_base, ss );
+#endif
+
+	printf ("\n");
+	return 0;
+}
+#endif
diff -urN a/drivers/net/macb.c b/drivers/net/macb.c
--- a/drivers/net/macb.c	2010-09-28 23:20:55.000000000 +0200
+++ b/drivers/net/macb.c	2010-12-02 15:07:11.346478536 +0100
@@ -108,6 +108,7 @@
 };
 #define to_macb(_nd) container_of(_nd, struct macb_device, netdev)
 
+#ifndef CONFIG_MACB2MAC
 static void macb_mdio_write(struct macb_device *macb, u8 reg, u16 value)
 {
 	unsigned long netctl;
@@ -164,6 +165,7 @@
 
 	return MACB_BFEXT(DATA, frame);
 }
+#endif /* CONFIG_MACB2MAC */
 
 #if defined(CONFIG_CMD_MII)
 
@@ -322,6 +324,7 @@
 	return 0;
 }
 
+#ifndef CONFIG_MACB2MAC
 static void macb_phy_reset(struct macb_device *macb)
 {
 	struct eth_device *netdev = &macb->netdev;
@@ -434,6 +437,14 @@
 		return 1;
 	}
 }
+#else
+static int macb_phy_init(struct macb_device *macb)
+{
+	macb_writel(macb, NCFGR, macb_readl(macb, NCFGR) | MACB_BIT(SPD) | MACB_BIT(FD));
+
+	return 1;
+}
+#endif /* CONFIG_MACB2MAC */
 
 static int macb_init(struct eth_device *netdev, bd_t *bd)
 {
diff -urN a/include/configs/nedap9263.h b/include/configs/nedap9263.h
--- a/include/configs/nedap9263.h	1970-01-01 01:00:00.000000000 +0100
+++ b/include/configs/nedap9263.h	2010-12-02 15:07:11.346478536 +0100
@@ -0,0 +1,192 @@
+/*
+ * (C) Copyright 2007-2008
+ * Stelian Pop <stelian.pop@leadtechdesign.com>
+ * Lead Tech Design <www.leadtechdesign.com>
+ * Jaap de Jong <jaap.dejong@nedap.com>
+ *
+ * Configuation settings for the NEDAP9263 board.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/* ARM asynchronous clock */
+#define CONFIG_DISPLAY_CPUINFO		1
+#define CONFIG_DISPLAY_BOARDINFO	1
+#define CONFIG_BOOTDELAY		1
+
+#define CONFIG_SYS_AT91_MAIN_CLOCK	25000000	/* 25 MHz oscillator */
+#define CONFIG_SYS_HZ			1000
+
+#define CONFIG_ARM926EJS		1		/* This is an ARM926EJS Core	*/
+#define CONFIG_AT91SAM9263		1		/* It's an Atmel AT91SAM9263 SoC*/
+#define CONFIG_NEDAP9263		1		/* on an NEDAP9263 Board	*/
+#define CONFIG_ARCH_CPU_INIT
+#undef CONFIG_USE_IRQ					/* we don't need IRQ/FIQ stuff	*/
+
+#define CONFIG_CMDLINE_TAG		1		/* enable passing of ATAGs	*/
+#define CONFIG_SETUP_MEMORY_TAGS	1
+#define CONFIG_INITRD_TAG		1
+
+#define CONFIG_SKIP_LOWLEVEL_INIT	1
+#define CONFIG_SKIP_RELOCATE_UBOOT	1
+
+/* WATCHDOG */
+#define CONFIG_HW_WATCHDOG		1
+#define CONFIG_AT91SAM9_WATCHDOG	1
+
+/* UART */
+#define CONFIG_ATMEL_USART		1
+#undef CONFIG_USART0
+#undef CONFIG_USART1
+#undef CONFIG_USART2
+#define CONFIG_USART3			1		/* USART 3 is DBGU */
+
+/* LCD */
+//#define CONFIG_LCD			1
+//#define LCD_BPP				LCD_COLOR8
+//#define CONFIG_LCD_LOGO			1
+//#undef LCD_TEST_PATTERN
+//#define CONFIG_LCD_INFO			1
+//#define CONFIG_LCD_INFO_BELOW_LOGO	1
+//#define CONFIG_SYS_WHITE_ON_BLACK	1
+//#define CONFIG_ATMEL_LCD		1
+//#define CONFIG_ATMEL_LCD_BGR555		1
+//#define CONFIG_SYS_CONSOLE_IS_IN_ENV	1
+//#define CONFIG_LCD_IN_PSRAM		1
+
+/* GPIO */
+#define CONFIG_AT91_GPIO		1
+
+/* LED */
+#define CONFIG_AT91_LED			1
+#define	CONFIG_RED_LED			AT91_PIO_PORTB, 7	/* this is the power led */
+#define	CONFIG_GREEN_LED		AT91_PIO_PORTB, 8	/* this is the user1 led */
+#define	CONFIG_YELLOW_LED		AT91_PIO_PORTC, 29	/* this is the user2 led */
+
+/* SDRAM */
+#define CONFIG_NR_DRAM_BANKS		1
+#define PHYS_SDRAM			0x20000000
+
+/* NOR */
+#define CONFIG_SYS_NO_FLASH		1
+
+/* NAND */
+#define CONFIG_NAND_ATMEL		1
+#define CONFIG_SYS_MAX_NAND_DEVICE	1
+#define CONFIG_SYS_NAND_BASE		0x40000000
+#define CONFIG_SYS_NAND_DBW_8		1
+#define CONFIG_SYS_NAND_MASK_ALE	(1 << 21)	/* our ALE is AD21 */
+#define CONFIG_SYS_NAND_MASK_CLE	(1 << 22)	/* our CLE is AD22 */
+#define CONFIG_SYS_NAND_ENABLE_PIN	AT91_PIO_PORTD, 15
+#define CONFIG_SYS_NAND_READY_PIN	AT91_PIO_PORTA, 22
+#define CONFIG_SYS_64BIT_VSPRINTF	1		/* needed for nand_util.c */
+#define CONFIG_CMD_NAND			1
+
+/* PSRAM */
+//#define	PHYS_PSRAM			0x70000000
+//#define	PHYS_PSRAM_SIZE			0x00400000	/* 4MB */
+
+/* ETHERNET */
+#define CONFIG_MACB			1
+#define CONFIG_MACB2MAC			1
+#define CONFIG_RMII			1
+#define CONFIG_NET_MULTI		1
+#define CONFIG_NET_RETRY_COUNT		20
+#define CONFIG_RESET_PHY_R		1
+//#define CONFIG_CMD_PING			1
+#define CONFIG_CMD_DHCP			1
+
+/* USB */
+//#define CONFIG_USB_ATMEL		1
+//#define CONFIG_USB_OHCI_NEW		1
+//#define CONFIG_DOS_PARTITION		1
+//#define CONFIG_SYS_USB_OHCI_CPU_INIT	1
+//#define CONFIG_SYS_USB_OHCI_REGS_BASE	0x00a00000	/* AT91SAM9263_UHP_BASE */
+//#define CONFIG_SYS_USB_OHCI_SLOT_NAME	"at91sam9263"
+//#define CONFIG_SYS_USB_OHCI_MAX_ROOT_PORTS	2
+//#define CONFIG_USB_STORAGE		1
+//#define CONFIG_CMD_FAT			1
+//#define CONFIG_CMD_USB			1
+
+/* MEMORY */
+#define CONFIG_SYS_LOAD_ADDR		0x22000000	/* load address */
+#define CONFIG_SYS_MEMTEST_START	PHYS_SDRAM
+#define CONFIG_SYS_MEMTEST_END		0x23e00000
+
+/* bootp */
+#define CONFIG_BOOTP_BOOTFILESIZE	1
+#define CONFIG_BOOTP_BOOTPATH		1
+//#define CONFIG_BOOTP_GATEWAY		1
+//#define CONFIG_BOOTP_HOSTNAME		1
+
+/* bootstrap + u-boot + env + linux in nandflash */
+#define MTDIDS_DEFAULT			"nand0=atmel_nand"
+#define MTDPARTS_DEFAULT		"mtdparts=atmel_nand:128K(bootstrap)ro,256K(u-boot-env),640K(u-boot),-(rootfs)"
+#define CONFIG_EXTRA_ENV_SETTINGS	\
+	"mtdids="MTDIDS_DEFAULT"\0"	\
+	"mtdparts="MTDPARTS_DEFAULT"\0"
+#define CONFIG_ENV_IS_IN_NAND		1
+#define CONFIG_ENV_OFFSET		0x20000
+#define CONFIG_ENV_OFFSET_REDUND	0x40000
+#define CONFIG_ENV_SIZE			0x20000		/* 1 sector = 128 kB */
+#define CONFIG_BOOTCOMMAND		\
+	"ubi part rootfs && "		\
+	"ubifsmount nedap9263-rootfs && " \
+	"ubifsload 0x22000000 /boot/uImage && " \
+	"setenv bootargs panic=1 quiet " MTDPARTS_DEFAULT " root=ubi0 rw ubi.mtd=3,512 rootfstype=ubifs && " \
+	"bootm 0x22000000"
+
+#define CONFIG_BAUDRATE			115200
+#define CONFIG_SYS_BAUDRATE_TABLE	{115200 , 19200, 38400, 57600, 9600 }
+
+#define CONFIG_SYS_PROMPT		"U-Boot> "
+#define CONFIG_SYS_CBSIZE		256
+#define CONFIG_SYS_MAXARGS		16
+#define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
+#define CONFIG_SYS_LONGHELP		1
+#define CONFIG_CMDLINE_EDITING		1
+#define CONFIG_AUTO_COMPLETE		1
+#define CONFIG_SYS_HUSH_PARSER		1
+#define CONFIG_SYS_PROMPT_HUSH_PS2	"> "
+#define CONFIG_CMD_UBI			1
+#define CONFIG_CMD_UBIFS		1
+#define CONFIG_RBTREE			1
+#define CONFIG_MTD_DEVICE		1
+#define CONFIG_MTD_PARTITIONS		1
+#define CONFIG_CMD_MTDPARTS		1
+#define CONFIG_LZO			1
+
+/* malloc / stack */
+#define CONFIG_SYS_MALLOC_LEN		(1024 * 1024)	/* 1 MiB for malloc() */
+#define CONFIG_SYS_GBL_DATA_SIZE	256		/* 256 bytes for initial data */
+#define CONFIG_STACKSIZE		(32*1024)	/* regular stack */
+
+/* command line */
+#include <config_cmd_default.h>
+#undef CONFIG_CMD_FPGA
+
+/* check */
+#ifdef CONFIG_USE_IRQ
+#error CONFIG_USE_IRQ not supported
+#endif
+
+#endif
diff -urN a/Makefile b/Makefile
--- a/Makefile	2010-09-28 23:20:55.000000000 +0200
+++ b/Makefile	2010-12-02 15:07:11.346478536 +0100
@@ -1975,6 +1975,11 @@
 	fi;
 	@$(MKCONFIG) -n $@ -a at91sam9263ek arm arm926ejs at91sam9263ek atmel at91
 
+nedap9263_config	:	unconfig
+	@mkdir -p $(obj)include
+	echo "#define CONFIG_SYS_USE_NANDFLASH 1"	>>$(obj)include/config.h
+	@$(MKCONFIG) -a nedap9263 arm arm926ejs nedap9263 nedap at91
+
 at91sam9rlek_nandflash_config \
 at91sam9rlek_dataflash_config \
 at91sam9rlek_dataflash_cs0_config \
